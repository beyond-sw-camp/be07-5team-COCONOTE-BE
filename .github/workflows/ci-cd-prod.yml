name: CI/CD Pipeline for Prod

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때만 실행
    paths-ignore:
      - 'k8s/overlays/prod/**'       # k8s 설정 파일 변경 무시


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Set environment variable for release version
        run: echo "RELEASE_VERSION=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      - name: Build Docker Image with Jib and Push to Amazon ECR
        env:
          IMAGE_URI: 730335516193.dkr.ecr.ap-northeast-2.amazonaws.com/coconote/coconote_be
        run: |
          ./gradlew jib --image=$IMAGE_URI:v${{ env.RELEASE_VERSION }}
          ./gradlew jib --image=$IMAGE_URI:latest



      - name: Update kubeconfig for EKS cluster
        run: aws eks update-kubeconfig --name coconote-k8s-cluster --region ap-northeast-2

      - name: Update k8s deployment with new image tag
        run: |
          sed -i "s|image: 730335516193.dkr.ecr.ap-northeast-2.amazonaws.com/coconote/coconote_be:v[0-9]*|image: 730335516193.dkr.ecr.ap-northeast-2.amazonaws.com/coconote/coconote_be:v${{ env.RELEASE_VERSION }}|" k8s/overlays/prod/deployment-patch.yml
          echo "Updated deployment-patch.yml:"
          cat k8s/overlays/prod/deployment-patch.yml

      - name: Commit and Push Updated Kubernetes Config
        run: |
          git config --global user.email "jsangmin99@gmail.com"
          git config --global user.name "deployBot"  # GitHub 사용자 이름 입력
          git add k8s/overlays/prod/deployment-patch.yml
          git commit -m "Update image tags for coconote-backend"
          git push https://token:${{ secrets.G_TOKEN }}@github.com/hw-coconote/coconote-BE.git

      - name: Apply Kubernetes Changes
        run: |
          kubectl apply -k k8s/overlays/prod
